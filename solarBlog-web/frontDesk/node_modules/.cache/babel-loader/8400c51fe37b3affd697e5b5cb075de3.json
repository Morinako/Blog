{"remainingRequest":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\babel-loader\\lib\\index.js!D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\vuetify\\lib\\components\\VCombobox\\VCombobox.js","dependencies":[{"path":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\vuetify\\lib\\components\\VCombobox\\VCombobox.js","mtime":499162500000},{"path":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VCombobox/VCombobox.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array as PropType<string[]>,\n      default: () => ([]),\n    },\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n\n      // If search is not dirty and is\n      // using slot, do nothing\n      if (isUsingSlot && !this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot\n      // to avoid a double input\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData!.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}