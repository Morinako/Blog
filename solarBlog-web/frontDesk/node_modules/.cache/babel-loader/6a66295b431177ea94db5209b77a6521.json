{"remainingRequest":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\babel-loader\\lib\\index.js!D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\vuetify\\lib\\mixins\\scrollable\\index.js","dependencies":[{"path":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\vuetify\\lib\\mixins\\scrollable\\index.js","mtime":499162500000},{"path":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\solarBlog-master\\solarBlog-master\\solarBlog-web\\frontDesk\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOlxcc29sYXJCbG9nLW1hc3Rlclxcc29sYXJCbG9nLW1hc3Rlclxcc29sYXJCbG9nLXdlYlxcZnJvbnREZXNrXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7Cgp2YXIgX2RpcmVjdGl2ZXMgPSByZXF1aXJlKCIuLi8uLi9kaXJlY3RpdmVzIik7Cgp2YXIgX2NvbnNvbGUgPSByZXF1aXJlKCIuLi8uLi91dGlsL2NvbnNvbGUiKTsKCnZhciBfdnVlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ2dWUiKSk7CgovLyBEaXJlY3RpdmVzCi8vIFV0aWxpdGllcwovLyBUeXBlcwoKLyoqCiAqIFNjcm9sbGFibGUKICoKICogVXNlZCBmb3IgbW9uaXRvcmluZyBzY3JvbGxpbmcgYW5kCiAqIGludm9raW5nIGZ1bmN0aW9ucyBiYXNlZCB1cG9uCiAqIHNjcm9sbGluZyB0aHJlc2hvbGRzIGJlaW5nCiAqIG1ldC4KICovCgovKiBAdnVlL2NvbXBvbmVudCAqLwp2YXIgX2RlZmF1bHQgPSBfdnVlLmRlZmF1bHQuZXh0ZW5kKHsKICBuYW1lOiAnc2Nyb2xsYWJsZScsCiAgZGlyZWN0aXZlczogewogICAgU2Nyb2xsOiBfZGlyZWN0aXZlcy5TY3JvbGwKICB9LAogIHByb3BzOiB7CiAgICBzY3JvbGxUYXJnZXQ6IFN0cmluZywKICAgIHNjcm9sbFRocmVzaG9sZDogW1N0cmluZywgTnVtYmVyXQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGN1cnJlbnRTY3JvbGw6IDAsCiAgICAgIGN1cnJlbnRUaHJlc2hvbGQ6IDAsCiAgICAgIGlzQWN0aXZlOiBmYWxzZSwKICAgICAgaXNTY3JvbGxpbmdVcDogZmFsc2UsCiAgICAgIHByZXZpb3VzU2Nyb2xsOiAwLAogICAgICBzYXZlZFNjcm9sbDogMCwKICAgICAgdGFyZ2V0OiBudWxsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8qKgogICAgICogQSBjb21wdXRlZCBwcm9wZXJ0eSB0aGF0IHJldHVybnMKICAgICAqIHdoZXRoZXIgc2Nyb2xsaW5nIGZlYXR1cmVzIGFyZQogICAgICogZW5hYmxlZCBvciBkaXNhYmxlZAogICAgICovCiAgICBjYW5TY3JvbGw6IGZ1bmN0aW9uIGNhblNjcm9sbCgpIHsKICAgICAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnOwogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSB0aHJlc2hvbGQgdGhhdCBtdXN0IGJlIG1ldCBiZWZvcmUKICAgICAqIHRocmVzaG9sZE1ldCBmdW5jdGlvbiBpcyBpbnZva2VkCiAgICAgKi8KICAgIGNvbXB1dGVkU2Nyb2xsVGhyZXNob2xkOiBmdW5jdGlvbiBjb21wdXRlZFNjcm9sbFRocmVzaG9sZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2Nyb2xsVGhyZXNob2xkID8gTnVtYmVyKHRoaXMuc2Nyb2xsVGhyZXNob2xkKSA6IDMwMDsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpc1Njcm9sbGluZ1VwOiBmdW5jdGlvbiBpc1Njcm9sbGluZ1VwKCkgewogICAgICB0aGlzLnNhdmVkU2Nyb2xsID0gdGhpcy5zYXZlZFNjcm9sbCB8fCB0aGlzLmN1cnJlbnRTY3JvbGw7CiAgICB9LAogICAgaXNBY3RpdmU6IGZ1bmN0aW9uIGlzQWN0aXZlKCkgewogICAgICB0aGlzLnNhdmVkU2Nyb2xsID0gMDsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5zY3JvbGxUYXJnZXQpIHsKICAgICAgdGhpcy50YXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc2Nyb2xsVGFyZ2V0KTsKCiAgICAgIGlmICghdGhpcy50YXJnZXQpIHsKICAgICAgICAoMCwgX2NvbnNvbGUuY29uc29sZVdhcm4pKCJVbmFibGUgdG8gbG9jYXRlIGVsZW1lbnQgd2l0aCBpZGVudGlmaWVyICIuY29uY2F0KHRoaXMuc2Nyb2xsVGFyZ2V0KSwgdGhpcyk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU2Nyb2xsOiBmdW5jdGlvbiBvblNjcm9sbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5jYW5TY3JvbGwpIHJldHVybjsKICAgICAgdGhpcy5wcmV2aW91c1Njcm9sbCA9IHRoaXMuY3VycmVudFNjcm9sbDsKICAgICAgdGhpcy5jdXJyZW50U2Nyb2xsID0gdGhpcy50YXJnZXQgPyB0aGlzLnRhcmdldC5zY3JvbGxUb3AgOiB3aW5kb3cucGFnZVlPZmZzZXQ7CiAgICAgIHRoaXMuaXNTY3JvbGxpbmdVcCA9IHRoaXMuY3VycmVudFNjcm9sbCA8IHRoaXMucHJldmlvdXNTY3JvbGw7CiAgICAgIHRoaXMuY3VycmVudFRocmVzaG9sZCA9IE1hdGguYWJzKHRoaXMuY3VycmVudFNjcm9sbCAtIHRoaXMuY29tcHV0ZWRTY3JvbGxUaHJlc2hvbGQpOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKE1hdGguYWJzKF90aGlzLmN1cnJlbnRTY3JvbGwgLSBfdGhpcy5zYXZlZFNjcm9sbCkgPiBfdGhpcy5jb21wdXRlZFNjcm9sbFRocmVzaG9sZCkgX3RoaXMudGhyZXNob2xkTWV0KCk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBtZXRob2QgaW52b2tlZCB3aGVuCiAgICAgKiBzY3JvbGxpbmcgaW4gYW55IGRpcmVjdGlvbgogICAgICogaGFzIGV4Y2VlZGVkIHRoZSB0aHJlc2hvbGQKICAgICAqLwogICAgdGhyZXNob2xkTWV0OiBmdW5jdGlvbiB0aHJlc2hvbGRNZXQoKSB7fQogIH0KfSk7CgpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"sources":["../../../src/mixins/scrollable/index.ts"],"names":[],"mappings":";;;;;;;;;;;AACA;;AAGA;;AAGA;;AAPA;AAGA;AAGA;;AAGA;;;;;;;;;AAQA;eACe,aAAA,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,YAAA;AAGxB,EAAA,UAAU,EAAE;AAAE,IAAA,MAAA,EAAA;AAAF,GAHY;AAKxB,EAAA,KAAK,EAAE;AACL,IAAA,YAAY,EADP,MAAA;AAEL,IAAA,eAAe,EAAE,CAAA,MAAA,EAAA,MAAA;AAFZ,GALiB;AAUxB,EAAA,IAAI,EAAE;AAAA,WAAO;AACX,MAAA,aAAa,EADF,CAAA;AAEX,MAAA,gBAAgB,EAFL,CAAA;AAGX,MAAA,QAAQ,EAHG,KAAA;AAIX,MAAA,aAAa,EAJF,KAAA;AAKX,MAAA,cAAc,EALH,CAAA;AAMX,MAAA,WAAW,EANA,CAAA;AAOX,MAAA,MAAM,EAAE;AAPG,KAAP;AAAA,GAVkB;AAoBxB,EAAA,QAAQ,EAAE;AACR;;;;;AAKA,IAAA,SANQ,uBAMC;AACP,aAAO,OAAA,MAAA,KAAP,WAAA;AAPM,KAAA;;AASR;;;;AAIA,IAAA,uBAbQ,qCAae;AACrB,aAAO,KAAA,eAAA,GACH,MAAM,CAAC,KADJ,eACG,CADH,GAAP,GAAA;AAGD;AAjBO,GApBc;AAwCxB,EAAA,KAAK,EAAE;AACL,IAAA,aADK,2BACQ;AACX,WAAA,WAAA,GAAmB,KAAA,WAAA,IAAoB,KAAvC,aAAA;AAFG,KAAA;AAIL,IAAA,QAJK,sBAIG;AACN,WAAA,WAAA,GAAA,CAAA;AACD;AANI,GAxCiB;AAiDxB,EAAA,OAjDwB,qBAiDjB;AACL,QAAI,KAAJ,YAAA,EAAuB;AACrB,WAAA,MAAA,GAAc,QAAQ,CAAR,aAAA,CAAuB,KAArC,YAAc,CAAd;;AAEA,UAAI,CAAC,KAAL,MAAA,EAAkB;AAChB,qFAAwD,KAA7C,YAAX,GAAA,IAAA;AACD;AACF;AAxDqB,GAAA;AA2DxB,EAAA,OAAO,EAAE;AACP,IAAA,QADO,sBACC;AAAA;;AACN,UAAI,CAAC,KAAL,SAAA,EAAqB;AAErB,WAAA,cAAA,GAAsB,KAAtB,aAAA;AACA,WAAA,aAAA,GAAqB,KAAA,MAAA,GACjB,KAAA,MAAA,CADiB,SAAA,GAEjB,MAAM,CAFV,WAAA;AAIA,WAAA,aAAA,GAAqB,KAAA,aAAA,GAAqB,KAA1C,cAAA;AACA,WAAA,gBAAA,GAAwB,IAAI,CAAJ,GAAA,CAAS,KAAA,aAAA,GAAqB,KAAtD,uBAAwB,CAAxB;AAEA,WAAA,SAAA,CAAe,YAAK;AAClB,YACE,IAAI,CAAJ,GAAA,CAAS,KAAA,CAAA,aAAA,GAAqB,KAAA,CAA9B,WAAA,IACA,KAAA,CAFF,uBAAA,EAGE,KAAA,CAAA,YAAA;AAJJ,OAAA;AAZK,KAAA;;AAmBP;;;;;AAKA,IAAA,YAxBO,0BAwBK,CAAkB;AAxBvB;AA3De,CAAX,C","sourcesContent":["// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n"],"sourceRoot":""}]}